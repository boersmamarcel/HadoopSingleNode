From c76f57dcd993063cf960fb42e65219edd5230432 Mon Sep 17 00:00:00 2001
From: Todd Lipcon <todd@cloudera.com>
Date: Wed, 9 Feb 2011 17:31:34 -0800
Subject: [PATCH 0818/1020] Amend MAPREDUCE-1100. Change log messages in ReduceTask from info to debug level

Reason: reduces log size for large reduce tasks
Author: Yahoo Eng
Ref: CDH-2622
---
 .../org/apache/hadoop/mapred/ReduceTask.java       |   56 ++++++++++++--------
 1 files changed, 34 insertions(+), 22 deletions(-)

diff --git a/src/mapred/org/apache/hadoop/mapred/ReduceTask.java b/src/mapred/org/apache/hadoop/mapred/ReduceTask.java
index 459c1e8..350a594 100644
--- a/src/mapred/org/apache/hadoop/mapred/ReduceTask.java
+++ b/src/mapred/org/apache/hadoop/mapred/ReduceTask.java
@@ -1426,8 +1426,10 @@ class ReduceTask extends Task {
               " arrived to reduce task " + reduce);
           return null;
         }
-        LOG.info("header: " + mapId + ", compressed len: " + compressedLength +
-                 ", decompressed len: " + decompressedLength);
+        if (LOG.isDebugEnabled()) {
+          LOG.debug("header: " + mapId + ", compressed len: " + compressedLength +
+              ", decompressed len: " + decompressedLength);
+        }
 
         //We will put a file in memory if it meets certain criteria:
         //1. The size of the (decompressed) file should be less than 25% of 
@@ -1439,19 +1441,23 @@ class ReduceTask extends Task {
 
         // Shuffle
         MapOutput mapOutput = null;
-        if (shuffleInMemory) { 
-          LOG.info("Shuffling " + decompressedLength + " bytes (" + 
-              compressedLength + " raw bytes) " + 
-              "into RAM from " + mapOutputLoc.getTaskAttemptId());
+        if (shuffleInMemory) {
+          if (LOG.isDebugEnabled()) {
+            LOG.debug("Shuffling " + decompressedLength + " bytes (" + 
+                compressedLength + " raw bytes) " + 
+                "into RAM from " + mapOutputLoc.getTaskAttemptId());
+          }
 
           mapOutput = shuffleInMemory(mapOutputLoc, connection, input,
                                       (int)decompressedLength,
                                       (int)compressedLength);
         } else {
-          LOG.info("Shuffling " + decompressedLength + " bytes (" + 
-              compressedLength + " raw bytes) " + 
-              "into Local-FS from " + mapOutputLoc.getTaskAttemptId());
-
+          if (LOG.isDebugEnabled()) {
+            LOG.debug("Shuffling " + decompressedLength + " bytes (" + 
+                compressedLength + " raw bytes) " + 
+                "into Local-FS from " + mapOutputLoc.getTaskAttemptId());
+          }
+          
           mapOutput = shuffleToDisk(mapOutputLoc, input, filename, 
               compressedLength);
         }
@@ -1600,8 +1606,10 @@ class ReduceTask extends Task {
                            (shuffleData.length-bytesRead));
           }
 
-          LOG.info("Read " + bytesRead + " bytes from map-output for " +
-                   mapOutputLoc.getTaskAttemptId());
+          if (LOG.isDebugEnabled()) {
+            LOG.debug("Read " + bytesRead + " bytes from map-output for " +
+                mapOutputLoc.getTaskAttemptId());
+          }
 
           input.close();
         } catch (IOException ioe) {
@@ -1656,13 +1664,15 @@ class ReduceTask extends Task {
         }
 
         // TODO: Remove this after a 'fix' for HADOOP-3647
-        if (mapOutputLength > 0) {
-          DataInputBuffer dib = new DataInputBuffer();
-          dib.reset(shuffleData, 0, shuffleData.length);
-          LOG.info("Rec #1 from " + mapOutputLoc.getTaskAttemptId() + " -> (" + 
-                   WritableUtils.readVInt(dib) + ", " + 
-                   WritableUtils.readVInt(dib) + ") from " + 
-                   mapOutputLoc.getHost());
+        if (LOG.isDebugEnabled()) {
+          if (mapOutputLength > 0) {
+            DataInputBuffer dib = new DataInputBuffer();
+            dib.reset(shuffleData, 0, shuffleData.length);
+            LOG.debug("Rec #1 from " + mapOutputLoc.getTaskAttemptId() + 
+                " -> (" + WritableUtils.readVInt(dib) + ", " + 
+                WritableUtils.readVInt(dib) + ") from " + 
+                mapOutputLoc.getHost());
+          }
         }
         
         return mapOutput;
@@ -2730,9 +2740,11 @@ class ReduceTask extends Task {
         do {
           try {
             int numNewMaps = getMapCompletionEvents();
-            if (numNewMaps > 0) {
-              LOG.info(reduceTask.getTaskID() + ": " +  
-                  "Got " + numNewMaps + " new map-outputs"); 
+            if (LOG.isDebugEnabled()) {
+              if (numNewMaps > 0) {
+                LOG.debug(reduceTask.getTaskID() + ": " +  
+                    "Got " + numNewMaps + " new map-outputs"); 
+              }
             }
             Thread.sleep(SLEEP_TIME);
           } 
-- 
1.7.0.4

