From e863f5bee5763ec354384645b9d62743a052fae9 Mon Sep 17 00:00:00 2001
From: Aaron T. Myers <atm@cloudera.com>
Date: Thu, 28 Apr 2011 00:20:22 -0700
Subject: [PATCH 0952/1020] HDFS-1846. Don't fill preallocated portion of edits log with 0x00

Reason: Improvement
Author: Aaron T. Myers
Ref: CDH-3059
---
 .../hadoop/hdfs/server/namenode/FSEditLog.java     |   14 +++-
 .../namenode/TestEditLogFileOutputStream.java      |   59 ++++++++++++++++++++
 2 files changed, 69 insertions(+), 4 deletions(-)
 create mode 100644 src/test/org/apache/hadoop/hdfs/server/namenode/TestEditLogFileOutputStream.java

diff --git a/src/hdfs/org/apache/hadoop/hdfs/server/namenode/FSEditLog.java b/src/hdfs/org/apache/hadoop/hdfs/server/namenode/FSEditLog.java
index 40fa72a..b24ad1d 100644
--- a/src/hdfs/org/apache/hadoop/hdfs/server/namenode/FSEditLog.java
+++ b/src/hdfs/org/apache/hadoop/hdfs/server/namenode/FSEditLog.java
@@ -127,7 +127,14 @@ public class FSEditLog {
     private FileChannel fc;         // channel of the file stream for sync
     private DataOutputBuffer bufCurrent;  // current buffer for writing
     private DataOutputBuffer bufReady;    // buffer ready for flushing
-    static ByteBuffer fill = ByteBuffer.allocateDirect(512); // preallocation
+    static ByteBuffer fill = ByteBuffer.allocateDirect(1024 * 1024); // preallocation, 1MB
+
+    static {
+      fill.position(0);
+      for (int i = 0; i < fill.capacity(); i++) {
+        fill.put(OP_INVALID);
+      }
+    }
 
     EditLogFileOutputStream(File name) throws IOException {
       super();
@@ -234,12 +241,11 @@ public class FSEditLog {
       if (position + 4096 >= fc.size()) {
         FSNamesystem.LOG.debug("Preallocating Edit log, current size " +
                                 fc.size());
-        long newsize = position + 1024*1024; // 1MB
         fill.position(0);
-        int written = fc.write(fill, newsize);
+        int written = fc.write(fill, position);
         FSNamesystem.LOG.debug("Edit log size is now " + fc.size() +
                               " written " + written + " bytes " +
-                              " at offset " +  newsize);
+                              " at offset " + position);
       }
     }
     
diff --git a/src/test/org/apache/hadoop/hdfs/server/namenode/TestEditLogFileOutputStream.java b/src/test/org/apache/hadoop/hdfs/server/namenode/TestEditLogFileOutputStream.java
new file mode 100644
index 0000000..bc3d3cc
--- /dev/null
+++ b/src/test/org/apache/hadoop/hdfs/server/namenode/TestEditLogFileOutputStream.java
@@ -0,0 +1,59 @@
+/**
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+*/
+
+package org.apache.hadoop.hdfs.server.namenode;
+
+import static org.junit.Assert.*;
+
+import java.io.File;
+import java.io.IOException;
+
+import org.apache.hadoop.conf.Configuration;
+import org.apache.hadoop.fs.DU;
+import org.apache.hadoop.fs.FileSystem;
+import org.apache.hadoop.fs.permission.FsPermission;
+import org.junit.Test;
+
+public class TestEditLogFileOutputStream {
+
+  @Test
+  public void testPreallocation() throws IOException {
+    Configuration conf = new Configuration();
+    FileSystem.setDefaultUri(conf, "hdfs://localhost:0");
+    conf.set("dfs.http.address", "127.0.0.1:0");
+    NameNode.format(conf);
+    NameNode nn = new NameNode(conf);
+
+    File editLog = nn.getFSImage().getEditLog().getFsEditName();
+
+    assertEquals("Edit log should only be 4 bytes long",
+        4, editLog.length());
+    assertEquals("Edit log disk space used should be one block",
+        4096, new DU(editLog, conf).getUsed());
+
+    nn.mkdirs("/tmp", new FsPermission((short)777));
+
+    assertEquals("Edit log should be 1MB + 4 bytes long",
+        (1024 * 1024) + 4, editLog.length());
+    // 256 blocks for the 1MB of preallocation space, 1 block for the original
+    // 4 bytes
+    assertTrue("Edit log disk space used should be at least 257 blocks",
+        257 * 4096 <= new DU(editLog, conf).getUsed());
+  }
+
+}
-- 
1.7.0.4

